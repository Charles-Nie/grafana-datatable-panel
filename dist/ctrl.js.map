{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","FileExport","DataTable","JSZip","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","rowsPerPage","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","scroll","scrollHeight","fontSize","columnAliases","columnWidthHints","sortByColumnsData","sortByColumns","columnData","sortMethod","datatableTheme","themeOptions","light","dark","rowNumbersEnabled","infoEnabled","searchEnabled","showCellBorders","showRowBorders","hoverEnabled","orderColumnEnabled","compactRowsEnabled","stripedRowsEnabled","lengthChangeEnabled","datatablePagingType","pagingTypes","text","value","themes","disabled","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","window","pageIndex","table","dataRaw","addColumnSegment","newPlusButton","columnSortMethods","fontSizes","colorModes","columnTypes","unitFormats","getUnitFormats","dateFormats","getColumnNames","_","map","col","panel","fields","defaults","System","config","paths","getPanelPath","import","grafanaBootData","user","lightTheme","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datatableOptionsPath","replace","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","tmpPanelHeight","ctrl","height","row","actualHeight","parseInt","renderer","isTimezoneUtc","$sanitize","exportTableDataToCsv","render_values","scope","elem","attrs","formatters","_this","renderPanel","panelHeight","getPanelHeight","renderData","renderingCompleted","column","without","$q","when","getColumns","segments","c","newSegment","find","plusButton","html","columnStyleDefaults","copy","style","defaultRule","columnSortChanged","i","columnNumber","Int32","e","j","sortDirection","defaultAlias","name","alias","columnAliasChanged","defaultHint","width","columnWidthHintsChanged","columnWidthsChanged","subItem","index","ref","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport $ from 'jquery';\nimport angular from 'angular';\nimport kbn from 'app/core/utils/kbn';\n\nimport * as FileExport from 'app/core/utils/file_export';\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\n// this is needed to export to excel format\nimport JSZip from './libs/jszip/dist/jszip.min.js';\n\n// this is needed for basic datatables.net theme\n//import './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\n\n// See this for styling https://datatables.net/manual/styling/theme-creator\n\n/*\nDark Theme Basic uses these values\n\ntable section border: #242222 rgb(36,34,34)\nrow/cell border: #141414 rgb(20,20,20)\nrow background: #1F1D1D  rgb(31,29,29)\nrow selected color:  #242222 rgb(36,34,34)\ncontrol text: #1FB2E5 rgb(31,178,229)\ncontrol text: white  (dataTables_paginate)\npaging active button: #242222 rgb(36,34,34)\npaging button hover: #111111 rgb(17,17,17)\n\nwith these modifications:\n.dataTables_wrapper .dataTables_paginate .paginate_button {\n  color: white\n}\ntable.dataTable tfoot th {\n  color: #1FB2E5;\n  font-weight: bold; }\n\n\nLight Theme Basic uses these values\n\ntable section border: #ECECEC rgb(236,236,236)\nrow/cell border: #FFFFFF rgb(255,255,255)\nrow background: #FBFBFB  rgb(251,251,251)\nrow selected color:  #ECECEC rgb(236,236,236)\ncontrol text: black\npaging active button: #BEBEBE\npaging button hover: #C0C0C0\n\nwith these modifications:\n.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {\n  color: #1fb2e5 !important;\ntable.dataTable tfoot th {\n  color: #1FB2E5;\n  font-weight: bold; }\n*/\n\nimport './css/panel.css!';\n// themes attempt to modify the entire page, this \"contains\" the styling to the table only\nimport './css/datatables-wrapper.css!';\n\nimport {\n  transformDataToTable,\n  transformers\n} from './transformers';\n\nimport { DatatableRenderer } from './renderer';\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  rowsPerPage: 5,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n    {\n      unit: 'short',\n      type: 'number',\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n      }\n    ],\n  columns: [],\n  scroll: false,\n  scrollHeight: 'default',\n  fontSize: '100%',\n  columnAliases: [],\n  columnWidthHints: [],\n  sortByColumnsData: [\n    [ 0, 'desc' ]\n  ],\n  sortByColumns: [\n    {\n      columnData: 0,\n      sortMethod: 'desc'\n    }\n  ],\n  datatableTheme: 'basic_theme',\n  themeOptions: {\n    light: './css/datatable-light.css',\n    dark:  './css/datatable-dark.css'\n  },\n  rowNumbersEnabled: false,\n  infoEnabled: true,\n  searchEnabled: true,\n  showCellBorders: false,\n  showRowBorders: true,\n  hoverEnabled: true,\n  orderColumnEnabled: true,\n  compactRowsEnabled: false,\n  stripedRowsEnabled: true,\n  lengthChangeEnabled: true,\n  datatablePagingType: 'simple_numbers',\n  pagingTypes: [\n    {\n      text: 'Page number buttons only',\n      value: 'numbers',\n    },\n    {\n      text: \"'Previous' and 'Next' buttons only\",\n      value: 'simple'\n    },\n    {\n      text: \"'Previous' and 'Next' buttons, plus page numbers\",\n      value: 'simple_numbers'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons\",\n      value: 'full'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\",\n      value: 'full_numbers'\n    },\n    {\n      text: \"'First' and 'Last' buttons, plus page numbers\",\n      value: 'first_last_numbers'\n    }\n  ],\n  themes: [\n    {\n      value: 'basic_theme',\n      text: 'Basic',\n      disabled: false,\n    },\n    {\n      value: 'bootstrap_theme',\n      text: 'Bootstrap',\n      disabled: true,\n    },\n    {\n      value: 'foundation_theme',\n      text: 'Foundation',\n      disabled: true,\n    },\n    {\n      value: 'themeroller_theme',\n      text: 'ThemeRoller',\n      disabled: true,\n    }\n  ]\n\n};\n\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\n    super($scope, $injector);\n    // this is needed to export excel format\n    window.JSZip = JSZip;\n    this.pageIndex = 0;\n    this.table = null;\n    this.dataRaw = [];\n    this.transformers = transformers;\n    this.annotationsSrv = annotationsSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    // editor\n\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.columnSortMethods = [\n      {\n        text: 'Ascending',\n        value: 'asc'\n      },\n      {\n        text: 'Descending',\n        value: 'desc'\n      },\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.colorModes = [\n      {\n        text: 'Disabled',\n        value: null\n      },\n      {\n        text: 'Cell',\n        value: 'cell'\n      },\n      {\n        text: 'Value',\n        value: 'value'\n      },\n      {\n        text: 'Row',\n        value: 'row'\n      },\n      {\n        text: 'Row Column',\n        value: 'rowcolumn'\n      },\n    ];\n    this.columnTypes = [\n      {\n        text: 'Number',\n        value: 'number'\n      },\n      {\n        text: 'String',\n        value: 'string'\n      },\n      {\n        text: 'Date',\n        value: 'date'\n      },\n      {\n        text: 'Hidden',\n        value: 'hidden'\n      }\n    ];\n    this.unitFormats = kbn.getUnitFormats();\n    this.dateFormats = [\n      {\n        text: 'YYYY-MM-DD HH:mm:ss',\n        value: 'YYYY-MM-DD HH:mm:ss'\n      },\n      {\n        text: 'MM/DD/YY h:mm:ss a',\n        value: 'MM/DD/YY h:mm:ss a'\n      },\n      {\n        text: 'MMMM D, YYYY LT',\n        value: 'MMMM D, YYYY LT'\n      },\n    ];\n    // this is used from bs-typeahead and needs to be instance bound\n    this.getColumnNames = () => {\n      if (!this.table) {\n        return [];\n      }\n      return _.map(this.table.columns, function(col) {\n        return col.text;\n      });\n    };\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n    _.defaults(this.panel, panelDefaults);\n\n//    \"jquery\": this.getPanelPath() + \"libs/jquery/dist/jquery.min\",\n\n    System.config({\n        paths: {\n            \"datatables.net\": this.getPanelPath() + \"libs/datatables.net/js/jquery.dataTables.min\",\n            \"datatables.net-bs\" : this.getPanelPath() + \"libs/datatables.net-bs/js/dataTables.bootstrap.min\",\n            \"datatables.net-jqui\" : this.getPanelPath() + \"libs/datatables.net-jqui/js/dataTables.jqueryui.min\",\n            \"datatables.net-zf\" : this.getPanelPath() + \"libs/datatables.net-zf/js/dataTables.foundation.min\",\n            \"datatables.net-select\": this.getPanelPath() + \"libs/datatables.net-select/js/dataTables.select.min\",\n            \"datatables.net-buttons\": this.getPanelPath() + \"libs/datatables.net-buttons/js/dataTables.buttons.min\",\n            \"jszip\": this.getPanelPath() + \"libs/jszip/dist/jszip.min\",\n            \"pdfmake\": this.getPanelPath() + \"libs/pdfmake/build/pdfmake.min\",\n            \"pdfmake-vfs\": this.getPanelPath() + \"libs/pdfmake/build/vfs_fonts\",\n        }\n    });\n\n    System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/dataTables.buttons.min.js');\n    System.import(this.getPanelPath() + 'libs/datatables.net-select/js/dataTables.select.min.js');\n    System.import(this.getPanelPath() + 'libs/jszip/dist/jszip.min.js');\n    System.import(this.getPanelPath() + 'libs/pdfmake/build/pdfmake.min.js');\n    System.import(this.getPanelPath() + 'libs/pdfmake/build/vfs_fonts.js');\n    System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.html5.js');\n    System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.print.min.js');\n    System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.colVis.min.js');\n\n    // basic datatables theme\n    // alternative themes are disabled since they affect all datatable panels on same page currently\n    switch (this.panel.datatableTheme) {\n      case 'basic_theme':\n        //System.import(this.getPanelPath() + 'libs/datatables.net/js/jquery.dataTables.min.js');\n\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/dataTables.buttons.min.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-select/js/dataTables.select.min.js');\n        //System.import(this.getPanelPath() + 'libs/jszip/dist/jszip.min.js');\n        //System.import(this.getPanelPath() + 'libs/pdfmake/build/pdfmake.min.js');\n        //System.import(this.getPanelPath() + 'libs/pdfmake/build/vfs_fonts.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.html5.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.print.min.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.colVis.min.js');\n        System.import(this.getPanelPath() + 'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\n        if (grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\n        } else {\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\n        }\n        System.import(this.getPanelPath() + 'libs/datatables.net-select-dt/css/select.dataTables.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons-dt/css/buttons.dataTables.min.css!');\n        break;\n      case 'bootstrap_theme':\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/js/dataTables.bootstrap.min.js');\n        System.import(this.getPanelPath() + 'libs/bootstrap/dist/css/prefixed-bootstrap.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/css/dataTables.bootstrap.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-select-bs/css/select.bootstrap.min.css!');\n        if (!grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + 'css/prefixed-bootstrap-slate.min.css!');\n        }\n        break;\n      case 'foundation_theme':\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/js/dataTables.foundation.min.js');\n        System.import(this.getPanelPath() + 'libs/foundation/css/prefixed-foundation.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/css/dataTables.foundation.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-select-zf/css/select.foundation.min.css!');\n        break;\n      case 'themeroller_theme':\n        System.import(this.getPanelPath() + 'libs/datatables.net-jqui/js/dataTables.jqueryui.min.js');\n        System.import(this.getPanelPath() + 'libs/datatables.net-jqui/css/dataTables.jqueryui.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-select-jqui/css/select.jqueryui.min.css!');\n        System.import(this.getPanelPath() + 'css/jquery-ui-smoothness.css!');\n        break;\n    default:\n        //System.import(this.getPanelPath() + 'libs/datatables.net/js/jquery.dataTables.min.js');\n\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/dataTables.buttons.min.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-select/js/dataTables.select.min.js');\n        //System.import(this.getPanelPath() + 'libs/jszip/dist/jszip.min.js');\n        //System.import(this.getPanelPath() + 'libs/pdfmake/build/pdfmake.min.js');\n        //System.import(this.getPanelPath() + 'libs/pdfmake/build/vfs_fonts.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.html5.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.print.min.js');\n        //System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.colVis.min.js');\n        System.import(this.getPanelPath() + 'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\n        if (grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\n        } else {\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\n        }\n        System.import(this.getPanelPath() + 'libs/datatables.net-select-dt/css/select.dataTables.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons-dt/css/buttons.dataTables.min.css!');\n        break;\n    }\n    this.dataLoaded = true;\n    this.http = $http;\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitPanelActions(actions) {\n      actions.push({\n        text: 'Export CSV',\n        click: 'ctrl.exportCsv()'\n      });\n    }\n\n  // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var datatableOptionsPath = thisPanelPath + 'partials/datatables.options.html';\n    this.addEditorTab('Datatable Options', datatableOptionsPath, 3);\n  }\n\n  getPanelPath() {\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    //console.log(\"baseUrl: \" + thisPanel.baseUrl);\n    // the system loader preprends public to the url, remove the extra from our baseurl\n    var thisPanelPath = thisPanel.baseUrl.replace(\"public/plugins\", \"plugins\");\n    thisPanelPath += '/';\n    //console.log(\"panelPath: \" + thisPanelPath);\n    return thisPanelPath;\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range\n        })\n        .then(annotations => {\n          return {\n            data: annotations\n          };\n        });\n    }\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    //this.table.sort(this.panel.sort);\n    // compute the sort order\n    return super.render(this.table);\n  }\n\n  getPanelHeight() {\n      // panel can have a fixed height via options\n      var tmpPanelHeight = this.$scope.ctrl.panel.height;\n      // if that is blank, try to get it from our row\n      if (typeof tmpPanelHeight === 'undefined') {\n        // get from the row instead\n        tmpPanelHeight = this.row.height;\n        // default to 250px if that was undefined also\n        if (typeof tmpPanelHeight === 'undefined') {\n          tmpPanelHeight = 250;\n        }\n      }\n      else {\n        // convert to numeric value\n        tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n      }\n      var actualHeight = parseInt(tmpPanelHeight);\n      // grafana minimum height for a panel is 250px\n      if (actualHeight < 250) {\n        actualHeight = 250;\n      }\n      return actualHeight;\n  }\n\n  exportCsv() {\n    var renderer = new DatatableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n    FileExport.exportTableDataToCsv(renderer.render_values());\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var formatters = [];\n    var _this = this;\n\n    /**\n     * [renderPanel description]\n     * @return {[type]} [description]\n     */\n    function renderPanel() {\n      var renderer = new DatatableRenderer(panel, ctrl.table, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize);\n      renderer.render();\n      _this.dataLoaded = true;\n    }\n\n    ctrl.panel.panelHeight = this.getPanelHeight();\n    ctrl.events.on('render', function(renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // editor methods\n  //\n  // cell and row borders cannot both be set at the same time\n  showCellBordersChanged() {\n    if (this.panel.showCellBorders) {\n      this.panel.showRowBorders = false;\n    }\n    this.render();\n  }\n\n  themeChanged() {\n    //console.log(this.panel.datatableTheme);\n    this.render();\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    this.render();\n  }\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.render();\n  }\n\n  getColumnOptions() {\n    if (!this.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw);\n    var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\n      value: c.text\n    }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\n    var column = _.find(columns, {\n      text: this.addColumnSegment.value\n    });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  addColumnStyle() {\n      var columnStyleDefaults = {\n        unit: 'short',\n        type: 'number',\n        decimals: 2,\n        colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n        colorMode: null,\n        pattern: '/.*/',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        thresholds: [],\n      };\n      this.panel.styles.push(angular.copy(columnStyleDefaults));\n  }\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  addColumnSortingRule() {\n      var defaultRule = {\n        columnData: 0,\n        sortMethod: 'desc',\n      };\n      // check if this column already exists\n      this.panel.sortByColumns.push(angular.copy(defaultRule));\n      this.columnSortChanged();\n  }\n\n  removeSortByColumn(column) {\n    this.panel.sortByColumns = _.without(this.panel.sortByColumns, column);\n    this.columnSortChanged();\n  }\n\n  columnSortChanged() {\n    // take the values in sortByColumns and convert them into datatables format\n    var data = [];\n    if (this.panel.sortByColumns.length > 0) {\n      for (let i = 0; i < this.panel.sortByColumns.length; i++) {\n        // allow numbers and column names\n        let columnData = this.panel.sortByColumns[i].columnData;\n        let columnNumber = 0;\n        try {\n          columnNumber = Int32.parseInt(columnData);\n        }\n        catch(e) {\n          // check if empty\n          if (columnData === \"\") {\n            columnNumber = 0;\n          }\n          // find the matching column index\n          for (let j = 0; j < this.panel.columns.length; j++) {\n            if (this.panel.columns[j].text === columnData) {\n              columnNumber = j;\n              break;\n            }\n          }\n        }\n        let sortDirection = this.panel.sortByColumns[i].sortMethod;\n        data.push([columnNumber, sortDirection]);\n      }\n    } else {\n      // default to column 0, descending\n      data.push([0,'desc']);\n    }\n    this.panel.sortByColumnsData = data;\n    this.render();\n  }\n\n  addColumnAlias() {\n      var defaultAlias = {\n        name: '',\n        alias: '',\n      };\n      // check if this column already exists\n      this.panel.columnAliases.push(angular.copy(defaultAlias));\n      this.columnAliasChanged();\n  }\n\n  removeColumnAlias(column) {\n    this.panel.columnAliases = _.without(this.panel.columnAliases, column);\n    this.columnAliasChanged();\n  }\n\n  columnAliasChanged() {\n    this.render();\n  }\n\n  addColumnWidthHint() {\n      var defaultHint = {\n        name: '',\n        width: '80px',\n      };\n      // check if this column already exists\n      this.panel.columnWidthHints.push(angular.copy(defaultHint));\n      this.columnWidthHintsChanged();\n  }\n  removeColumnWidthHint(column) {\n    this.panel.columnWidthHints = _.without(this.panel.columnWidthHints, column);\n    this.columnWidthsChanged();\n  }\n\n  columnWidthHintsChanged() {\n    this.render();\n  }\n\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.render();\n  }\n  invertColorOrder(index) {\n    var ref = this.panel.styles[index].colors;\n    var copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.render();\n  }\n}\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\n"]}