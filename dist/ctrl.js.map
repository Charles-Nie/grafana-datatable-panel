{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","FileExport","DataTable","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","rowsPerPage","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","scroll","scrollHeight","fontSize","sort","col","desc","datatableTheme","rowNumbersEnabled","infoEnabled","searchEnabled","showCellBorders","showRowBorders","hoverEnabled","orderColumnEnabled","compactRowsEnabled","stripedRowsEnabled","lengthChangeEnabled","datatablePagingType","pagingTypes","text","value","themes","disabled","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","pageIndex","table","dataRaw","addColumnSegment","newPlusButton","fontSizes","colorModes","columnTypes","unitFormats","getUnitFormats","dateFormats","getColumnNames","_","map","panel","fields","defaults","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datatableOptionsPath","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","tmpPanelHeight","ctrl","height","row","replace","actualHeight","parseInt","renderer","isTimezoneUtc","$sanitize","exportTableDataToCsv","render_values","scope","elem","attrs","formatters","_this","renderPanel","panelHeight","getPanelHeight","renderData","renderingCompleted","column","without","$q","when","getColumns","segments","c","newSegment","find","plusButton","html","columnStyleDefaults","copy","style","subItem","index","ref","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport $ from 'jquery';\nimport angular from 'angular';\nimport kbn from 'app/core/utils/kbn';\n\nimport * as FileExport from 'app/core/utils/file_export';\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\n\n// this is needed for basic datatables.net theme\nimport './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\n\n// See this for styling https://datatables.net/manual/styling/theme-creator\n\n/*\n// These three are needed for bootstrap theme\nimport './libs/datatables.net-bs/js/dataTables.bootstrap.js';\n// this distributed css modifies the entire page, use the prefixed version of it instead\n//import './libs/bootstrap/dist/css/bootstrap.min.css!';\nimport './libs/bootstrap/dist/css/prefixed-bootstrap.min.css!';\nimport './libs/datatables.net-bs/css/dataTables.bootstrap.min.css!';\n*/\n\n\n/*\n// this distributed css modifies the entire page, use the prefixed version of it instead\n//import './libs/foundation/css/foundation.min.css!';\nimport './libs/foundation/css/prefixed-foundation.min.css!';\nimport './libs/datatables.net-zf/js/dataTables.foundation.js';\nimport './libs/datatables.net-zf/css/dataTables.foundation.min.css!';\n*/\n\n/*\n  JQuery UI ThemeRoller\nimport './libs/datatables.net-jqui/js/dataTables.jqueryui.js';\nimport './libs/datatables.net-jqui/css/dataTables.jqueryui.min.css!';\n*/\n\n// These are \"preview themes\"\n//import './css/dataTables.bootstrap4.min.css!';\n//import './css/dataTables.material.min.css!';\n//import './css/dataTables.semanticui.min.css!';\n//import './css/dataTables.uikit.min.css!';\n\n//import './css/datatable.css!';\nimport './css/panel.css!';\n// themes attempt to modify the entire page, this \"contains\" the styling to the table only\nimport './css/datatables-wrapper.css!';\nimport './css/datatable.css!';\n\nimport {\n  transformDataToTable,\n  transformers\n} from './transformers';\n\nimport { DatatableRenderer } from './renderer';\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  rowsPerPage: 5,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n    {\n      unit: 'short',\n      type: 'number',\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n      }\n    ],\n  columns: [],\n  scroll: false,\n  scrollHeight: 'default',\n  fontSize: '100%',\n  sort: {\n    col: 0,\n    desc: true\n  },\n  datatableTheme: 'basic_theme',\n  rowNumbersEnabled: false,\n  infoEnabled: true,\n  searchEnabled: true,\n  showCellBorders: false,\n  showRowBorders: true,\n  hoverEnabled: true,\n  orderColumnEnabled: true,\n  compactRowsEnabled: false,\n  stripedRowsEnabled: true,\n  lengthChangeEnabled: true,\n  datatablePagingType: 'simple_numbers',\n  pagingTypes: [\n    {\n      text: 'Page number buttons only',\n      value: 'numbers',\n    },\n    {\n      text: \"'Previous' and 'Next' buttons only\",\n      value: 'simple'\n    },\n    {\n      text: \"'Previous' and 'Next' buttons, plus page numbers\",\n      value: 'simple_numbers'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons\",\n      value: 'full'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\",\n      value: 'full_numbers'\n    },\n    {\n      text: \"'First' and 'Last' buttons, plus page numbers\",\n      value: 'first_last_numbers'\n    }\n  ],\n  themes: [\n    {\n      value: 'basic_theme',\n      text: 'Basic',\n      disabled: false,\n    },\n    {\n      value: 'bootstrap3_theme',\n      text: 'Bootstrap 3',\n      disabled: true,\n    },\n    {\n      value: 'bootstrap4_theme',\n      text: 'Bootstrap 4',\n      disabled: true,\n    },\n    {\n      value: 'foundation_theme',\n      text: 'Foundation',\n      disabled: true,\n    },\n    {\n      value: 'semantic_ui_theme',\n      text: 'Semantic UI',\n      disabled: true,\n    },\n    {\n      value: 'themeroller_theme',\n      text: 'ThemeRoller',\n      disabled: true,\n    },\n    {\n      value: 'material_design_theme',\n      text: 'Material Design',\n      disabled: true,\n    },\n    {\n      value: 'uikit_theme',\n      text: 'UIKit',\n      disabled: true,\n    }\n  ]\n\n};\n\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\n    super($scope, $injector);\n    this.pageIndex = 0;\n    this.table = null;\n    this.dataRaw = [];\n    this.transformers = transformers;\n    this.annotationsSrv = annotationsSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    // editor\n\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.colorModes = [\n      {\n        text: 'Disabled',\n        value: null\n      },\n      {\n        text: 'Cell',\n        value: 'cell'\n      },\n      {\n        text: 'Value',\n        value: 'value'\n      },\n      {\n        text: 'Row',\n        value: 'row'\n      },\n      {\n        text: 'Row Column',\n        value: 'rowcolumn'\n      },\n    ];\n    this.columnTypes = [\n      {\n        text: 'Number',\n        value: 'number'\n      },\n      {\n        text: 'String',\n        value: 'string'\n      },\n      {\n        text: 'Date',\n        value: 'date'\n      },\n      {\n        text: 'Hidden',\n        value: 'hidden'\n      }\n    ];\n    this.unitFormats = kbn.getUnitFormats();\n    this.dateFormats = [\n      {\n        text: 'YYYY-MM-DD HH:mm:ss',\n        value: 'YYYY-MM-DD HH:mm:ss'\n      },\n      {\n        text: 'MM/DD/YY h:mm:ss a',\n        value: 'MM/DD/YY h:mm:ss a'\n      },\n      {\n        text: 'MMMM D, YYYY LT',\n        value: 'MMMM D, YYYY LT'\n      },\n    ];\n    // this is used from bs-typeahead and needs to be instance bound\n    this.getColumnNames = () => {\n      if (!this.table) {\n        return [];\n      }\n      return _.map(this.table.columns, function(col) {\n        return col.text;\n      });\n    };\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n    _.defaults(this.panel, panelDefaults);\n\n    //this.datatableTheme = this.panel.themes[0];\n\n    this.dataLoaded = true;\n    this.http = $http;\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n\n  }\n\n  onInitPanelActions(actions) {\n      actions.push({\n        text: 'Export CSV',\n        click: 'ctrl.exportCsv()'\n      });\n    }\n    // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var datatableOptionsPath = thisPanelPath + 'partials/datatables.options.html';\n    this.addEditorTab('Datatable Options', datatableOptionsPath, 3);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range\n        })\n        .then(annotations => {\n          return {\n            data: annotations\n          };\n        });\n    }\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n    return super.render(this.table);\n  }\n\n  getPanelHeight() {\n    // panel can have a fixed height via options\n    var tmpPanelHeight = this.$scope.ctrl.panel.height;\n    // if that is blank, try to get it from our row\n    if (typeof tmpPanelHeight === 'undefined') {\n      // get from the row instead\n      tmpPanelHeight = this.row.height;\n      // default to 250px if that was undefined also\n      if (typeof tmpPanelHeight === 'undefined') {\n        tmpPanelHeight = \"250px\";\n      }\n    }\n    // convert to numeric value\n    tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n    var actualHeight = parseInt(tmpPanelHeight);\n    // grafana minimum height for a panel is 250px\n    if (actualHeight < 250) {\n      actualHeight = 250;\n    }\n    return actualHeight;\n  }\n\n\n  exportCsv() {\n    var renderer = new DatatableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n    FileExport.exportTableDataToCsv(renderer.render_values());\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var formatters = [];\n    var _this = this;\n\n    /**\n     * [renderPanel description]\n     * @return {[type]} [description]\n     */\n    function renderPanel() {\n      var renderer = new DatatableRenderer(panel, ctrl.table, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize);\n      renderer.render();\n      _this.dataLoaded = true;\n    }\n\n    ctrl.panel.panelHeight = this.getPanelHeight();\n    ctrl.events.on('render', function(renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // editor methods\n  //\n  // cell and row borders cannot both be set at the same time\n  showCellBordersChanged() {\n    if (this.panel.showCellBorders) {\n      this.panel.showRowBorders = false;\n    }\n    this.render();\n  }\n\n  themeChanged() {\n    //console.log(this.panel.datatableTheme);\n    this.render();\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    this.render();\n  }\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.render();\n  }\n\n  getColumnOptions() {\n    if (!this.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw);\n    var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\n      value: c.text\n    }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\n    var column = _.find(columns, {\n      text: this.addColumnSegment.value\n    });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  addColumnStyle() {\n      var columnStyleDefaults = {\n        unit: 'short',\n        type: 'number',\n        decimals: 2,\n        colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n        colorMode: null,\n        pattern: '/.*/',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        thresholds: [],\n      };\n      this.panel.styles.push(angular.copy(columnStyleDefaults));\n  }\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.render();\n  }\n  invertColorOrder(index) {\n    var ref = this.panel.styles[index].colors;\n    var copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.render();\n  }\n}\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\n"]}