{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","DataTable","FileExport","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","scroll","fontSize","sort","col","desc","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","pageIndex","table","dataRaw","addColumnSegment","newPlusButton","fontSizes","colorModes","text","value","columnTypes","unitFormats","getUnitFormats","dateFormats","getColumnNames","_","map","panel","fields","defaults","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","renderer","TableRenderer","isTimezoneUtc","$sanitize","exportTableDataToCsv","render_values","scope","elem","attrs","ctrl","formatters","_this","renderPanel","renderData","renderingCompleted","column","without","$q","when","getColumns","segments","c","newSegment","find","plusButton","html","columnStyleDefaults","copy","style","subItem","index","ref","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport $ from 'jquery';\nimport angular from 'angular';\nimport kbn from 'app/core/utils/kbn';\n\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\nimport './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\n// See this for styling https://datatables.net/manual/styling/theme-creator\nimport './css/datatable.css!';\nimport './css/panel.css!';\nimport * as FileExport from 'app/core/utils/file_export';\n\nimport {\n  transformDataToTable,\n  transformers\n} from './transformers';\n\nimport { DatatableRenderer } from './renderer';\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  pageSize: null,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n    {\n      unit: 'short',\n      type: 'number',\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n      }\n    ],\n  columns: [],\n  scroll: true,\n  fontSize: '100%',\n  sort: {\n    col: 0,\n    desc: true\n  },\n};\n\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\n    super($scope, $injector);\n    this.pageIndex = 0;\n    this.table = null;\n    this.dataRaw = [];\n    this.transformers = transformers;\n    this.annotationsSrv = annotationsSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    // editor\n\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.colorModes = [\n      {\n        text: 'Disabled',\n        value: null\n      },\n      {\n        text: 'Cell',\n        value: 'cell'\n      },\n      {\n        text: 'Value',\n        value: 'value'\n      },\n      {\n        text: 'Row',\n        value: 'row'\n      },\n    ];\n    this.columnTypes = [\n      {\n        text: 'Number',\n        value: 'number'\n      },\n      {\n        text: 'String',\n        value: 'string'\n      },\n      {\n        text: 'Date',\n        value: 'date'\n      },\n      {\n        text: 'Hidden',\n        value: 'hidden'\n      }\n    ];\n    this.unitFormats = kbn.getUnitFormats();\n    this.dateFormats = [\n      {\n        text: 'YYYY-MM-DD HH:mm:ss',\n        value: 'YYYY-MM-DD HH:mm:ss'\n      },\n      {\n        text: 'MM/DD/YY h:mm:ss a',\n        value: 'MM/DD/YY h:mm:ss a'\n      },\n      {\n        text: 'MMMM D, YYYY LT',\n        value: 'MMMM D, YYYY LT'\n      },\n    ];\n    // this is used from bs-typeahead and needs to be instance bound\n    this.getColumnNames = () => {\n      if (!this.table) {\n        return [];\n      }\n      return _.map(this.table.columns, function(col) {\n        return col.text;\n      });\n    };\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n    _.defaults(this.panel, panelDefaults);\n\n    this.dataLoaded = true;\n    this.http = $http;\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n\n  }\n\n  onInitPanelActions(actions) {\n      actions.push({\n        text: 'Export CSV',\n        click: 'ctrl.exportCsv()'\n      });\n    }\n    // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range\n        })\n        .then(annotations => {\n          return {\n            data: annotations\n          };\n        });\n    }\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n    return super.render(this.table);\n  }\n\n  exportCsv() {\n    var renderer = new TableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n    FileExport.exportTableDataToCsv(renderer.render_values());\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var formatters = [];\n    var _this = this;\n\n    /**\n     * [renderPanel description]\n     * @return {[type]} [description]\n     */\n    function renderPanel() {\n      var renderer = new DatatableRenderer(panel, data, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize);\n      renderer.render();\n      _this.dataLoaded = true;\n    }\n\n    ctrl.events.on('render', function(renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // editor methods\n  transformChanged() {\n    this.panel.columns = [];\n    this.render();\n  }\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.render();\n  }\n  getColumnOptions() {\n    if (!this.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw);\n    var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\n      value: c.text\n    }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\n    var column = _.find(columns, {\n      text: this.addColumnSegment.value\n    });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  addColumnStyle() {\n      var columnStyleDefaults = {\n        unit: 'short',\n        type: 'number',\n        decimals: 2,\n        colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n        colorMode: null,\n        pattern: '/.*/',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        thresholds: [],\n      };\n      this.panel.styles.push(angular.copy(columnStyleDefaults));\n  }\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.render();\n  }\n  invertColorOrder(index) {\n    var ref = this.panel.styles[index].colors;\n    var copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.render();\n  }\n}\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\n"]}